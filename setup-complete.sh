#!/bin/bash

# üöÄ Script de configuraci√≥n completa para Palindrome Ecommerce
# Este script configura y ejecuta todo el proyecto desde cero

set -e  # Salir si alg√∫n comando falla

echo "üîÑ Palindrome Ecommerce - Setup Completo"
echo "========================================"

# Funci√≥n para mostrar mensajes con colores
print_step() {
    echo -e "\n\033[1;34müîπ $1\033[0m"
}

print_success() {
    echo -e "\033[1;32m‚úÖ $1\033[0m"
}

print_error() {
    echo -e "\033[1;31m‚ùå $1\033[0m"
}

# Verificar si Docker est√° corriendo
if ! docker info > /dev/null 2>&1; then
    print_error "Docker no est√° corriendo. Por favor inicia Docker Desktop."
    exit 1
fi

print_step "1. Limpiando contenedores anteriores..."
docker compose down --volumes --remove-orphans 2>/dev/null || true

print_step "2. Construyendo im√°genes Docker..."
docker compose build --no-cache

print_step "3. Iniciando base de datos PostgreSQL..."
docker compose up -d postgres

print_step "4. Esperando que PostgreSQL est√© listo..."
sleep 10

# Verificar que PostgreSQL est√° listo
until docker compose exec postgres pg_isready -U palindrome_user -d palindrome_db > /dev/null 2>&1; do
    echo "Esperando PostgreSQL..."
    sleep 2
done

print_success "PostgreSQL est√° listo!"

print_step "5. Iniciando backend (con migraciones autom√°ticas)..."
docker compose up -d backend

print_step "6. Esperando que el backend est√© listo..."
sleep 15

# Verificar que el backend est√° respondiendo
until curl -s http://localhost:3001/api/products > /dev/null 2>&1; do
    echo "Esperando backend..."
    sleep 2
done

print_success "Backend est√° listo!"

print_step "7. Poblando base de datos con datos de prueba..."
# Ejecutar seed directamente en el contenedor de PostgreSQL
docker compose exec -T postgres psql -U palindrome_user -d palindrome_db << 'EOF'
-- Script SQL para poblar la base de datos con datos de prueba
-- Incluye productos con "abba" y otros pal√≠ndromos para testing

INSERT INTO products (title, brand, description, price, image_url) VALUES
-- Productos con "abba" en brand o description para testing de pal√≠ndromos
('Auriculares ABBA Pro', 'ABBA', 'Auriculares inal√°mbricos de alta calidad con cancelaci√≥n de ruido', 199.99, 'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=400'),
('Smartphone Premium', 'TechABBA', 'Tel√©fono inteligente con c√°mara profesional y bater√≠a de larga duraci√≥n', 899.99, 'https://images.unsplash.com/photo-1511707171634-5f897ff02aa9?w=400'),
('Laptop Gaming', 'GamerPro', 'Laptop para gaming con procesador ABBA-X y tarjeta gr√°fica dedicada', 1299.99, 'https://images.unsplash.com/photo-1496181133206-80ce9b88a853?w=400'),

-- Productos regulares para b√∫squedas normales
('Teclado Mec√°nico', 'KeyMaster', 'Teclado mec√°nico RGB para gaming y productividad', 149.99, 'https://images.unsplash.com/photo-1587829741301-dc798b83add3?w=400'),
('Monitor 4K', 'DisplayTech', 'Monitor 4K de 27 pulgadas con tecnolog√≠a HDR', 399.99, 'https://images.unsplash.com/photo-1527443224154-c4a3942d3acf?w=400'),
('Rat√≥n Inal√°mbrico', 'ClickMaster', 'Rat√≥n inal√°mbrico ergon√≥mico con sensor de precisi√≥n', 79.99, 'https://images.unsplash.com/photo-1527814050087-3793815479db?w=400'),
('Webcam HD', 'StreamPro', 'C√°mara web HD para videoconferencias y streaming', 129.99, 'https://images.unsplash.com/photo-1587202372634-32705e3bf49c?w=400'),
('Altavoces Bluetooth', 'SoundWave', 'Altavoces Bluetooth port√°tiles con sonido est√©reo', 89.99, 'https://images.unsplash.com/photo-1608043152269-423dbba4e7e1?w=400'),

-- Productos adicionales para testing de pal√≠ndromos
('level', 'TestBrand', 'Producto para testing de pal√≠ndromos con t√≠tulo level', 49.99, 'https://images.unsplash.com/photo-1560472354-b33ff0c44a43?w=400'),
('Tablet Pro', 'TabletCorp', 'Tablet profesional con stylus incluido y pantalla racecar ultra sensible', 599.99, 'https://images.unsplash.com/photo-1561154464-82e9adf32764?w=400'),
('Smartwatch', 'WatchTech', 'Reloj inteligente con monitor de salud y GPS integrado deed', 299.99, 'https://images.unsplash.com/photo-1523275335684-37898b6baf30?w=400'),
('Cargador Inal√°mbrico', 'ChargePlus', 'Base de carga inal√°mbrica r√°pida madam compatible con todos los dispositivos', 39.99, 'https://images.unsplash.com/photo-1586953208448-b95a79798f07?w=400')
ON CONFLICT DO NOTHING;
EOF

print_success "Base de datos poblada con 12 productos de prueba!"

print_step "8. Iniciando frontend..."
docker compose up -d frontend

print_step "9. Verificaci√≥n final de servicios..."
sleep 10

# Verificar que todos los servicios est√°n corriendo
if docker compose ps | grep -q "Up"; then
    print_success "¬°Todos los servicios est√°n corriendo!"
else
    print_error "Algunos servicios no se iniciaron correctamente"
    docker compose ps
    exit 1
fi

echo ""
echo "üéâ ¬°SETUP COMPLETO! üéâ"
echo "===================="
echo ""
echo "üì± Frontend: http://localhost:3000"
echo "üîß Backend API: http://localhost:3001"
echo "üìä Base de datos: PostgreSQL en puerto 5432"
echo ""
echo "üß™ Prueba estos pal√≠ndromos para obtener 50% OFF:"
echo "   ‚Ä¢ abba"
echo "   ‚Ä¢ level" 
echo "   ‚Ä¢ racecar"
echo "   ‚Ä¢ A man a plan a canal Panama"
echo ""
echo "üìã Comandos √∫tiles:"
echo "   ‚Ä¢ Ver logs: docker compose logs -f"
echo "   ‚Ä¢ Parar todo: docker compose down"
echo "   ‚Ä¢ Reiniciar: docker compose restart"
echo "   ‚Ä¢ Tests backend: docker compose exec backend npm test"
echo "   ‚Ä¢ Tests frontend: docker compose exec frontend npm test"
echo ""
print_success "¬°Listo para usar! üöÄ"
